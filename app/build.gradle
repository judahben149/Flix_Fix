plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
}

android {
    namespace 'com.judahben149.flixfix'
    compileSdk 33

    defaultConfig {
        applicationId "com.judahben149.flixfix"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        buildConfigField ("String", "API_KEY", getApiKey())

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    kapt {
        correctErrorTypes true
    }
    lintOptions {
        lintConfig = file("$rootDir/glide_notification_lint_ignore.xml")
    }
}

dependencies {
    def lifecycle_version = "2.6.1"
    def retrofit_version = "2.9.0"
    def hilt_version = "2.44.2"
    def coroutines_version = "1.6.4"
    def paging_version = "3.1.1"
    def timber_version = "5.0.1"
    def glide_version = "4.15.1"
    def okHttp_version = "4.9.0"
    def moshi_version = "2.9.0"
    def room_version = "2.4.3"


    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //Retrofit and OkHttp
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okHttp_version"

    //Gson
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //Moshi
//    implementation "com.squareup.retrofit2:converter-moshi:$moshi_version"
//    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //Paging 3
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-common-ktx:$paging_version"

    //room persistence library
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"

}

String getApiKey() {
    def propFile = rootProject.file("./local.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties['TMDB_API_KEY']
}