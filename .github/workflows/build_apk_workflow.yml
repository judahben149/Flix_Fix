name: Flix Fix Build Release Workflow

on:
  push:
    branches:
      [ master ]


jobs:
  apk:
    permissions:
      contents: write
    name: Generate and release APK
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Access TMDB_API_KEY
        env:
          TMDB_API_KEY: $
        run: echo TMDB_API_KEY=\"TMDB_API_KEY\" > ./local.properties
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: gradle
      - name: Set execution flag for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Build APK
        run: ./gradlew assembleRelease
      - name: Print APK directory contents
        run: ls -R app/build/outputs/apk/release/
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: app/build/outputs/apk/release/app-release-unsigned.apk
  release:
    name: Release APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Download Apk from build
        uses: actions/downlaod-artifact@v1
        with:
          name: apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .apk/app-release-unsigned.apk
          asset_name: FlixFix.apk
          asset_content_type: application/zip
